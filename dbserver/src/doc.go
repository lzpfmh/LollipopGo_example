package main

/*

  数据库设计：3个库设计
1. ac_game数据库：存储登录数据，只要全局数据设计
2. cf_game数据库：游戏配置数据库
3. game数据库：游戏主逻辑数据库

*/



/*

  数据库设计，垂直拆分，水平拆分；高效的数据库设计
  1. 数据库高效的设计
  2. 垂直拆分 ，需要将拆分的表放不同介质上
  3. 水平拆分 ，不同的设计

 垂直拆分：
 按列进行分割，即把一条记录分开多个地方保存，每个子表的行数相同。
 把主码和一些列放到一个表，然后把主码和另外的列放到另一个表中。如果一个表中某些列常用，而另外一些列不常用，
 则可以采用垂直分割，另外垂直分割可以使得数据行变小，一个数据页就能存放更多的数据，在查询时就会减少I/O 次
 数。其缺点是需要管理冗余列，查询所有数据需要join操作。
 垂直分割就是按列进行分割，即把一条记录分开多个地方保存，每个子表的行数相同。

 水平拆分：
 按记录进分分割，不同的记录可以分开保存，每个子表的列数相同。
 水平分割通常在下面的情况下使用：
 A 表很大，分割后可以降低在查询时需要读的数据和索引的页数，同时也降低了索引的层数，提高查询速度。
 B 表中的数据本来就有独立性，例如表中分别记录各个地区的数据或不同时期的数据，特别是有些数据常用，而另外一些数据不常用。
 C 需要把数据存放到多个介质上。
------------------------------------------------------------------------------------------------------------------------
垂直拆分：
解决问题：
表与表之间的io竞争
不解决问题：
单表中数据量增长出现的压力
方案：
把产品表和用户表放到一个server上
订单表单独放到一个server上

水平拆分：
解决问题：
单表中数据量增长出现的压力
不解决问题：
表与表之间的io争夺

*/
